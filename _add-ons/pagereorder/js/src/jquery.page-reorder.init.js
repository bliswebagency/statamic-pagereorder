// Generated by CoffeeScript 1.6.2
(function() {
  $(function() {
    /* Feature Tests
    */

    var $sortable, $subs, $tree, active_class, eligible_class, hasDragAndDrop, icon_markup, ignore_class, namespace;

    hasDragAndDrop = 'draggable' in document.createElement('span');
    if (!hasDragAndDrop) {
      return false;
    }
    /* Vars
    */

    $tree = $('#page-tree');
    $subs = $tree.find('.subpages');
    namespace = 'page-order';
    active_class = "" + namespace + "-active";
    ignore_class = "" + namespace + "-ignore";
    eligible_class = "" + namespace + "-sortable";
    icon_markup = "<div class=\"" + namespace + "\">\n  <div class=\"" + namespace + "__block\">\n    <div class=\"" + namespace + "__icon\">&#11021;</div>\n  </div>\n</div>";
    /* Prepare the #page-tree nodes
    */

    $tree.children().each(function() {
      var $sortable, slug, _ref;

      $sortable = $(this);
      slug = $.trim($sortable.find('.slug-preview').first().text());
      if (slug === "/") {
        return $sortable.addClass(ignore_class);
      } else {
        $sortable.addClass(eligible_class);
        return (_ref = $sortable.find('> .page-wrapper')) != null ? _ref.prepend(icon_markup) : void 0;
      }
    });
    /* Init the sortable plugin.
    */

    $sortable = $('#page-tree').sortable({
      items: "." + eligible_class,
      handle: "." + namespace + "__block"
    });
    /* Handle special events on sorting.
    */

    return $sortable.on({
      'dragstart': function(e) {
        $tree.addClass(active_class);
        return $subs.slideUp();
      },
      'dragend': function(e) {
        $tree.removeClass(active_class);
        return $subs.slideDown();
      },
      'sortupdate': function(e) {
        var $page, location, order, orderJSON, page, pages, url;

        pages = $(this).find('> .page');
        order = (function() {
          var _i, _len, _results;

          _results = [];
          for (_i = 0, _len = pages.length; _i < _len; _i++) {
            page = pages[_i];
            $page = $(page);
            _results.push({
              index: $page.index(),
              url: $.trim($page.find('.slug-preview').first().text())
            });
          }
          return _results;
        })();
        orderJSON = JSON.stringify(order);
        location = window.location;
        url = "" + location.protocol + "//" + location.host;
        window.location = "" + url + "/TRIGGER/pagereorder/reorder_folders?order=" + orderJSON;
        return void 0;
      }
    });
  });

}).call(this);
